/* Media queries Breakpoint mixins */

@mixin for-mobile-layout {
  @media (max-width: $break-narrow) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: $break-narrow) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: $break-normal) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: $break-wide) {
    @content;
  }
}
@mixin for-X-wide-layout {
  @media (min-width: $break-X-wide) {
    @content;
  }
}

// @mixin layoutGTC($max) {
//   grid-template-columns:
//     minmax($layoutPadding, 1fr)
//     minmax(auto, $max)
//     minmax($layoutPadding, 1fr);
// }

/* Media  Mixins */

//aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
  position: relative;
  overflow: hidden;
  &:before {
    content: "";
    display: block;
    width: 100%;
    padding-top: calc(($height / $width) * 100%);
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}

@mixin tr($bcg, $hover: darken($bcg, 8%)) {
  background-color: $bcg;
  cursor: pointer;
  &:hover {
    background-color: $hover;
  }
}

// Buttons

@mixin btn($type: regular, $bg: $clr8, $clr: $clr0, $padding: em(24px) em(44px), $hover: darken($bg, 8%)) {
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  text-transform: uppercase;
  padding:em(10px) em(20px);
  line-height: 1.25;
  font-size: em(16px);
  border: none;
  // font-variation-settings: "wght" 430;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 10px;

  transition: background-color 0.2s;

  @if $type == regular {
    background-color: $bg;
    color: $clr;
    &:hover {
      background-color: $hover;
    }
  } @else if $type == dark {
    background-color: $clr2;
    color: $clr3;
    &:hover {
      background-color: $clr1;
      color: $clr3;
    }
  } @else if $type == light {
    background-color: $clr3;
    color: $clr2;
    &:hover {
      background-color: $clr1;
      color: $clr3;
    }
  }
   @else if $type == remove {
    background-color: $clr9;
    color: $clr0;
    &:hover {
      background-color: $clr10;
      color: $clr0;
    }
  }
}


// Type

@mixin type($type: bold) {
  // type options: 
  // 1.bold 
  // 2.boldCondensed 
  // 3.condensed
  @if $type == bold {
    font-variation-settings: "wght" 430;
  } 
  @else if $type == boldCondensed {
    font-variation-settings: "wght" 430, "wdth" 80;
    letter-spacing: em(6.72px);
  } 
  @else if $type == condensed {
    font-variation-settings: "wdth" 80;
    letter-spacing: em(6.72px);
  }
  @else if $type == light {
    font-variation-settings: "wght" 200;
  }
}
